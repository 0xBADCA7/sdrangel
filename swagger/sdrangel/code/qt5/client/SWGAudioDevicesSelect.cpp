/**
 * SDRangel
 * This is the web API of SDRangel SDR software. SDRangel is an Open Source Qt5/OpenGL 3.0+ GUI and server Software Defined Radio and signal analyzer in software. It supports Airspy, BladeRF, HackRF, LimeSDR, PlutoSDR, RTL-SDR, SDRplay RSP1 and FunCube
 *
 * OpenAPI spec version: 4.0.0
 * Contact: f4exb06@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGAudioDevicesSelect.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGAudioDevicesSelect::SWGAudioDevicesSelect(QString* json) {
    init();
    this->fromJson(*json);
}

SWGAudioDevicesSelect::SWGAudioDevicesSelect() {
    init();
}

SWGAudioDevicesSelect::~SWGAudioDevicesSelect() {
    this->cleanup();
}

void
SWGAudioDevicesSelect::init() {
    input = 0;
    output = 0;
}

void
SWGAudioDevicesSelect::cleanup() {
    

}

SWGAudioDevicesSelect*
SWGAudioDevicesSelect::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGAudioDevicesSelect::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&input, pJson["input"], "qint32", "");
    ::Swagger::setValue(&output, pJson["output"], "qint32", "");
}

QString
SWGAudioDevicesSelect::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGAudioDevicesSelect::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("input", QJsonValue(input));

    obj->insert("output", QJsonValue(output));

    return obj;
}

qint32
SWGAudioDevicesSelect::getInput() {
    return input;
}
void
SWGAudioDevicesSelect::setInput(qint32 input) {
    this->input = input;
}

qint32
SWGAudioDevicesSelect::getOutput() {
    return output;
}
void
SWGAudioDevicesSelect::setOutput(qint32 output) {
    this->output = output;
}


}

