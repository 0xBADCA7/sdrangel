/**
 * SDRangel
 * This is the web API of SDRangel SDR software. SDRangel is an Open Source Qt5/OpenGL 3.0+ GUI and server Software Defined Radio and signal analyzer in software. It supports Airspy, BladeRF, HackRF, LimeSDR, PlutoSDR, RTL-SDR, SDRplay RSP1 and FunCube
 *
 * OpenAPI spec version: 4.0.0
 * Contact: f4exb06@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGDeviceSettingsImpl.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace SWGSDRangel {

SWGDeviceSettingsImpl::SWGDeviceSettingsImpl(QString* json) {
    init();
    this->fromJson(*json);
}

SWGDeviceSettingsImpl::SWGDeviceSettingsImpl() {
    init();
}

SWGDeviceSettingsImpl::~SWGDeviceSettingsImpl() {
    this->cleanup();
}

void
SWGDeviceSettingsImpl::init() {
    file_source = new SWGFileSourceSettings();
    rtlsdr = new SWGRtlSdrSettings();
    limesdr_input = new SWGLimeSdrInputSettings();
    limesdr_output = new SWGLimeSdrOutputSettings();
}

void
SWGDeviceSettingsImpl::cleanup() {
    
    if(file_source != nullptr) {
        delete file_source;
    }

    if(rtlsdr != nullptr) {
        delete rtlsdr;
    }

    if(limesdr_input != nullptr) {
        delete limesdr_input;
    }

    if(limesdr_output != nullptr) {
        delete limesdr_output;
    }
}

SWGDeviceSettingsImpl*
SWGDeviceSettingsImpl::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGDeviceSettingsImpl::fromJsonObject(QJsonObject &pJson) {
    ::SWGSDRangel::setValue(&file_source, pJson["fileSource"], "SWGFileSourceSettings", "SWGFileSourceSettings");
    ::SWGSDRangel::setValue(&rtlsdr, pJson["rtlsdr"], "SWGRtlSdrSettings", "SWGRtlSdrSettings");
    ::SWGSDRangel::setValue(&limesdr_input, pJson["limesdrInput"], "SWGLimeSdrInputSettings", "SWGLimeSdrInputSettings");
    ::SWGSDRangel::setValue(&limesdr_output, pJson["limesdrOutput"], "SWGLimeSdrOutputSettings", "SWGLimeSdrOutputSettings");
}

QString
SWGDeviceSettingsImpl::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGDeviceSettingsImpl::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("fileSource"), file_source, obj, QString("SWGFileSourceSettings"));

    toJsonValue(QString("rtlsdr"), rtlsdr, obj, QString("SWGRtlSdrSettings"));

    toJsonValue(QString("limesdrInput"), limesdr_input, obj, QString("SWGLimeSdrInputSettings"));

    toJsonValue(QString("limesdrOutput"), limesdr_output, obj, QString("SWGLimeSdrOutputSettings"));

    return obj;
}

SWGFileSourceSettings*
SWGDeviceSettingsImpl::getFileSource() {
    return file_source;
}
void
SWGDeviceSettingsImpl::setFileSource(SWGFileSourceSettings* file_source) {
    this->file_source = file_source;
}

SWGRtlSdrSettings*
SWGDeviceSettingsImpl::getRtlsdr() {
    return rtlsdr;
}
void
SWGDeviceSettingsImpl::setRtlsdr(SWGRtlSdrSettings* rtlsdr) {
    this->rtlsdr = rtlsdr;
}

SWGLimeSdrInputSettings*
SWGDeviceSettingsImpl::getLimesdrInput() {
    return limesdr_input;
}
void
SWGDeviceSettingsImpl::setLimesdrInput(SWGLimeSdrInputSettings* limesdr_input) {
    this->limesdr_input = limesdr_input;
}

SWGLimeSdrOutputSettings*
SWGDeviceSettingsImpl::getLimesdrOutput() {
    return limesdr_output;
}
void
SWGDeviceSettingsImpl::setLimesdrOutput(SWGLimeSdrOutputSettings* limesdr_output) {
    this->limesdr_output = limesdr_output;
}


}

