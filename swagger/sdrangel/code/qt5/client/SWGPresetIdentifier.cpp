/**
 * SDRangel
 * This is the web API of SDRangel SDR software. SDRangel is an Open Source Qt5/OpenGL 3.0+ GUI and server Software Defined Radio and signal analyzer in software. It supports Airspy, BladeRF, HackRF, LimeSDR, PlutoSDR, RTL-SDR, SDRplay RSP1 and FunCube
 *
 * OpenAPI spec version: 4.0.0
 * Contact: f4exb06@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGPresetIdentifier.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGPresetIdentifier::SWGPresetIdentifier(QString* json) {
    init();
    this->fromJson(*json);
}

SWGPresetIdentifier::SWGPresetIdentifier() {
    init();
}

SWGPresetIdentifier::~SWGPresetIdentifier() {
    this->cleanup();
}

void
SWGPresetIdentifier::init() {
    groupName = new QString("");
centerFrequency = 0.0f;
type = new QString("");
name = new QString("");
}

void
SWGPresetIdentifier::cleanup() {
    if(groupName != NULL) {
        delete groupName;
    }

if(type != NULL) {
        delete type;
    }
if(name != NULL) {
        delete name;
    }
}

SWGPresetIdentifier*
SWGPresetIdentifier::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGPresetIdentifier::fromJsonObject(QJsonObject &pJson) {
    setValue(&groupName, pJson["groupName"], "QString", "QString");
setValue(&centerFrequency, pJson["centerFrequency"], "float", "");
setValue(&type, pJson["type"], "QString", "QString");
setValue(&name, pJson["name"], "QString", "QString");
}

QString
SWGPresetIdentifier::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGPresetIdentifier::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("groupName"), groupName, obj, QString("QString"));
    
        
obj->insert("centerFrequency", QJsonValue(centerFrequency));

    
    toJsonValue(QString("type"), type, obj, QString("QString"));
    
        

    
    toJsonValue(QString("name"), name, obj, QString("QString"));
    
        

    return obj;
}

QString*
SWGPresetIdentifier::getGroupName() {
    return groupName;
}
void
SWGPresetIdentifier::setGroupName(QString* groupName) {
    this->groupName = groupName;
}

float
SWGPresetIdentifier::getCenterFrequency() {
    return centerFrequency;
}
void
SWGPresetIdentifier::setCenterFrequency(float centerFrequency) {
    this->centerFrequency = centerFrequency;
}

QString*
SWGPresetIdentifier::getType() {
    return type;
}
void
SWGPresetIdentifier::setType(QString* type) {
    this->type = type;
}

QString*
SWGPresetIdentifier::getName() {
    return name;
}
void
SWGPresetIdentifier::setName(QString* name) {
    this->name = name;
}



} /* namespace Swagger */

