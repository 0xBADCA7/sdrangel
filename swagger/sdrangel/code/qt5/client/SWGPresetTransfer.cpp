/**
 * SDRangel
 * This is the web API of SDRangel SDR software. SDRangel is an Open Source Qt5/OpenGL 3.0+ GUI and server Software Defined Radio and signal analyzer in software. It supports Airspy, BladeRF, HackRF, LimeSDR, PlutoSDR, RTL-SDR, SDRplay RSP1 and FunCube
 *
 * OpenAPI spec version: 4.0.0
 * Contact: f4exb06@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGPresetTransfer.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGPresetTransfer::SWGPresetTransfer(QString* json) {
    init();
    this->fromJson(*json);
}

SWGPresetTransfer::SWGPresetTransfer() {
    init();
}

SWGPresetTransfer::~SWGPresetTransfer() {
    this->cleanup();
}

void
SWGPresetTransfer::init() {
    deviceSetIndex = NULL;
preset = new SWGPresetIdentifier();
}

void
SWGPresetTransfer::cleanup() {
    
if(preset != NULL) {
        delete preset;
    }
}

SWGPresetTransfer*
SWGPresetTransfer::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGPresetTransfer::fromJsonObject(QJsonObject &pJson) {
    setValue(&deviceSetIndex, pJson["deviceSetIndex"], "qint32", "");
setValue(&preset, pJson["preset"], "SWGPresetIdentifier", "SWGPresetIdentifier");
}

QString
SWGPresetTransfer::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGPresetTransfer::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    obj->insert("deviceSetIndex", QJsonValue(deviceSetIndex));

    
    toJsonValue(QString("preset"), preset, obj, QString("SWGPresetIdentifier"));
    
        

    return obj;
}

qint32
SWGPresetTransfer::getDeviceSetIndex() {
    return deviceSetIndex;
}
void
SWGPresetTransfer::setDeviceSetIndex(qint32 deviceSetIndex) {
    this->deviceSetIndex = deviceSetIndex;
}

SWGPresetIdentifier*
SWGPresetTransfer::getPreset() {
    return preset;
}
void
SWGPresetTransfer::setPreset(SWGPresetIdentifier* preset) {
    this->preset = preset;
}



} /* namespace Swagger */

